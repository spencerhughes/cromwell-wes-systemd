- name: Uninstall Cromwell and WES
  hosts: localhost
  vars:
    # Common uninstall settings
    uninstall_java: true
    remove_logs: true
    # Nginx uninstall settings
    uninstall_nginx: true
    restore_nginx_conf: true
    remove_keys: true
    # MySQL uninstall settings
    uninstall_mysql: true
    remove_db: true
    remove_db_user: true
    uninstall_python_mysql: true
    uninstall_build_essential: false
    uninstall_python3_dev: false
    uninstall_pkgconfig: false
    # Cromwell uninstall settings
    uninstall_cromwell: true
    remove_job_output_dir: true
    # WES uninstall settings
    uninstall_wes: true
  tasks:
    - name: Uninstall Cromwell
      when: uninstall_cromwell
      block:
        - name: Stop and disable Cromwell service
          become: true
          ansible.builtin.systemd:
            name: cromwell
            state: stopped
            enabled: false
        - name: Uninstall Cromwell service file
          become: true
          ansible.builtin.file:
            path: /etc/systemd/system/cromwell.service
            state: absent
          notify: Reload daemons
        - name: Remove Cromwell config directory
          become: true
          ansible.builtin.file:
            path: "{{ cromwell_config_directory }}"
            state: absent
        - name: Remove Cromwell JAR
          become: true
          ansible.builtin.file:
            path: "{{ cromwell_install_directory }}/cromwell-{{ cromwell_version }}.jar"
            state: absent
        - name: Uninstall Java
          become: true
          when: uninstall_java
          ansible.builtin.apt:
            name: openjdk-17-jre
            state: absent
        - name: Remove Cromwell job output directory
          become: true
          when: remove_job_output_dir
          ansible.builtin.file:
            path: "{{ cromwell_job_output_directory }}"
            state: absent
        - name: Remove Cromwell config directory
          become: true
          ansible.builtin.file:
            path: "{{ cromwell_config_directory }}"
            state: absent
        - name: Remove Cromwell logs
          become: true
          when: remove_logs
          ansible.builtin.file:
            path: "{{ cromwell_log_directory }}/cromwell.log"
            state: absent

    - name: Uninstall WES
      when: uninstall_wes
      block:
        - name: Disable WES Nginx site
          become: true
          ansible.builtin.file:
            path: /etc/nginx/sites-enabled/wes
            state: absent
          notify: Reload Nginx conf
        - name: Stop and disable WES service
          become: true
          ansible.builtin.systemd:
            name: wes
            state: stopped
            enabled: false
        - name: Remove WES service file
          become: true
          ansible.builtin.file:
            path: /etc/systemd/system/wes.service
            state: absent
          notify: Reload daemons
        - name: Uninstall Java
          become: true
          when: uninstall_java
          ansible.builtin.apt:
            name: openjdk-17-jre
            state: absent
        - name: Remove WES JAR
          become: true
          ansible.builtin.file:
            path: "{{ wes_install_directory }}/cromwell-wes-service-{{ wes_version }}.jar"
            state: absent
        - name: Remove WES logs
          become: true
          when: remove_logs
          ansible.builtin.file:
            path: "{{ wes_log_directory }}/wes.log"
            state: absent

    - name: Uninstall Nginx
      when: uninstall_nginx
      block:
        - name: Stop and disable Nginx service
          become: true
          ansible.builtin.systemd:
            name: nginx
            state: stopped
            enabled: false
        - name: Restore Nginx config from backup
          become: true
          when: restore_nginx_conf
          block:
            - name: "Find all backups for nginx.conf"
              ansible.builtin.find:
                recurse: no
                paths:
                  - '{{ "/etc/nginx/nginx.conf" | dirname }}'
                patterns:
                  - '{{ "/etc/nginx/nginx.conf" | basename }}\..*~'
                use_regex: true
              register: find_backup
            - name: Select the oldest backup found on disk
              ansible.builtin.set_fact:
                original_config_file: "{{ (find_backup.files | sort(attribute='mtime') | first).path }}"
            - name: "Restore backup of original version of nginx.conf"
              ansible.builtin.copy:
                src: "{{ original_config_file }}"
                remote_src: true
                dest: /etc/nginx/nginx.conf
                backup: true
        - name: Uninstall Nginx
          become: true
          ansible.builtin.apt:
            name: nginx
            state: absent
        - name: Remove client and server certificates from server
          become: true
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop:
            - "{{ client_cert_path | default(server_cert_path) }}/{{ client_cert_name }}"
            - "{{ server_cert_path }}/{{ server_cert_name }}"
        - name: Remove server keys
          become: true
          when: remove_keys
          ansible.builtin.file:
            path: "{{ server_key_path }}/{{ server_key_name }}"
        - name: Remove local certificates
          local_action:
            module: ansible.builtin.file
            path: "{{ client_cert_local_path }}/{{ client_cert_name }}"
            state: absent
        - name: Remove local key
          when: remove_keys
          local_action:
            module: ansible.builtin.file
            path: "{{ client_key_local_path }}/{{ client_key_name }}"
            state: absent

    - name: Uninstall MySQL
      when: uninstall_mysql
      block:
        - name: Remove Cromwell database user
          when: remove_db_user
          community.mysql.mysql_user:
            name: "{{ mysql_user }}"
            state: absent
            login_user: root
            login_password: "{{ mysql_root_password }}"
        - name: Delete the Cromwell database
          when: remove_db
          community.mysql.mysql_db:
            name: "{{ mysql_database_name }}"
            state: absent
        - name: Stop and disable MySQL service
          become: true
          ansible.builtin.systemd:
            name: mysql
            state: stopped
            enabled: false
        - name: Uninstall MySQL
          become: true
          ansible.builtin.apt:
            name: mariadb-server
            state: absent
        - name: Uninstall Python MySQL dependencies
          when: uninstall_python_mysql
          block:
            - name: Uninstall Python MySQL library
              become: true
              ansible.builtin.pip:
                name: mysqlclient
                state: absent
            - name: Uninstall Python MySQL dependencies
              become: true
              ansible.builtin.apt:
                name: default-libmysqlclient-dev
                state: absent
            - name: Uninstall build-essential
              become: true
              when: uninstall_build_essential
              ansible.builtin.apt:
                name: build-essential
                state: absent
            - name: Uninstall python3-dev
              become: true
              when: uninstall_python3_dev
              ansible.builtin.apt:
                name: python3-dev
                state: absent
            - name: Uninstall pkg-config
              become: true
              when: uninstall_pkgconfig
              ansible.builtin.apt:
                name: pkg-config
                state: absent

    - name: Remove shared directories
      when:
        - uninstall_wes
        - uninstall_cromwell
      block:
        - name: Remove WES install directory
          become: true
          ansible.builtin.file:
            path: "{{ wes_install_directory }}"
            state: absent
        - name: Remove WES log directory
          become: true
          when: remove_logs
          ansible.builtin.file:
            path: "{{ wes_log_directory }}"
            state: absent
        - name: Remove Cromwell install directory
          become: true
          ansible.builtin.file:
            path: "{{ cromwell_install_directory }}"
            state: absent
        - name: Remove Cromwell log directory
          become: true
          when: remove_logs
          ansible.builtin.file:
            path: "{{ cromwell_log_directory }}"
            state: absent

  handlers:
    - name: Reload Nginx conf
      become: true
      ansible.builtin.systemd:
        name: nginx
        state: reloaded
    - name: Reload daemons
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
